/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.PersonDirectory;
import model.Person;

/**
 *
 * @author rohanjauhari
 */
public class ViewJPanel extends javax.swing.JPanel {
    PersonDirectory personDirectory;
    JPanel detailsJPanel;
    /**
     * Creates new form viewJPanel
     */
    public ViewJPanel(PersonDirectory personDirectory, JPanel container) {
        initComponents();
        this.personDirectory = personDirectory;
        detailsJPanel = container;
        if (personDirectory.getHistory().size()==0){
            Person person1 = personDirectory.addNewPerson();
            person1.setFirstName("Tony");
            person1.setAge("50".getBytes()[0]);
            person1.setLastName("Stark");
            person1.setSsn("123456789");
            person1.setHomeAddress("Malibu","California",Integer.valueOf("12345"),"Los Angeles",Short.valueOf("1"),Long.valueOf("9876543210"));
            person1.setWorkAddress("Malibu","California",Integer.valueOf("12345"),"Los Angeles",Integer.valueOf("1"),Long.valueOf("9876543210"));
            
            Person person2 = personDirectory.addNewPerson();
            person2.setFirstName("Captain");
            person2.setAge("30".getBytes()[0]);
            person2.setLastName("America");
            person2.setSsn("123456789");
            person2.setHomeAddress("Brooklyn","New York",Integer.valueOf("12345"),"Brooklyn",Short.valueOf("1"),Long.valueOf("9876543210"));
            person2.setWorkAddress("Brooklyn","New York",Integer.valueOf("12345"),"Brooklyn",Integer.valueOf("1"),Long.valueOf("9876543210"));
            
            Person person3 = personDirectory.addNewPerson();
            person3.setFirstName("Dr");
            person3.setAge("50".getBytes()[0]);
            person3.setLastName("Strange");
            person3.setSsn("123456789");
            person3.setHomeAddress("London","England",Integer.valueOf("12345"),"London",Short.valueOf("1"),Long.valueOf("9876543210"));
            person3.setWorkAddress("London","England",Integer.valueOf("12345"),"London",Integer.valueOf("1"),Long.valueOf("9876543210"));
            
            Person person4 = personDirectory.addNewPerson();
            person4.setFirstName("Black");
            person4.setAge("30".getBytes()[0]);
            person4.setLastName("Panther");
            person4.setSsn("123456789");
            person4.setHomeAddress("Wakanda","Africa",Integer.valueOf("12345"),"Wakanda",Short.valueOf("1"),Long.valueOf("9876543210"));
            person4.setWorkAddress("Wakanda","Africa",Integer.valueOf("12345"),"Wakanda",Integer.valueOf("1"),Long.valueOf("9876543210"));
            
            Person person5 = personDirectory.addNewPerson();
            person5.setFirstName("Thor");
            person5.setAge("30".getBytes()[0]);
            person5.setLastName("Odinson");
            person5.setSsn("123456789");
            person5.setHomeAddress("Asgard","Heaven",Integer.valueOf("12345"),"Asgard",Short.valueOf("1"),Long.valueOf("9876543210"));
            person5.setWorkAddress("Asgard","Heaven",Integer.valueOf("12345"),"Asgard",Integer.valueOf("1"),Long.valueOf("9876543210"));
            
        }populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lableTtile = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPeople = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        lableTtile.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lableTtile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lableTtile.setText("View People");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblPeople.setBackground(new java.awt.Color(204, 204, 255));
        tblPeople.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Home city", "Home zip", "Work city", "Work zip"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPeople);

        btnBack.setText("Back <<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addComponent(lableTtile, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(230, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lableTtile))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addContainerGap(91, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        int selectedIndex = tblPeople.getSelectedRow();
        
        if (selectedIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPeople.getModel();
//        Person person = (Person) model.getValueAt(selectedIndex,0);
        
        //delete record
//        if (selectedIndex != null)
        {
            personDirectory.removePerson(selectedIndex);
        }
        
        //updating this table
        populateTable();
                    JOptionPane.showMessageDialog(this,"Person Deleted", "Success",JOptionPane.INFORMATION_MESSAGE);

    }                                         

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        detailsJPanel.remove(this);
        CardLayout layout = (CardLayout) detailsJPanel.getLayout();
        layout. previous (detailsJPanel);
    }                                       

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        int selectedIndex = tblPeople.getSelectedRow();
        
        if (selectedIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        Person foundPerson = personDirectory.getHistory().get(selectedIndex);
        
        ViewSearchJPanel panel = new ViewSearchJPanel(detailsJPanel, foundPerson, true);
            detailsJPanel.add ("ViewSearchJPanel",panel);
            CardLayout layout = (CardLayout) detailsJPanel.getLayout ();
            layout.next(detailsJPanel);
    }                                         


    // Variables declaration - do not modify                     
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lableTtile;
    private javax.swing.JTable tblPeople;
    // End of variables declaration                   

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblPeople.getModel();
        model.setRowCount(0);
        
            Object[] row = new Object[6];
                        
            for (Person p: personDirectory.getHistory()){
            Person.HomeAddress ha = p.getHomeAddress();
            Person.WorkAddress wa = p.getWorkAddress();
            row[0] = p.firstName;
            row[1] = p.getLastName();
            row[2] = ha.city;
            row[3] = ha.getZip();
            row[4] = wa.getCity();
            row[5] = wa.getZip();
            model.addRow(row);
        }
    }

}
